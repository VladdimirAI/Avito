package com.example.demo;

public class AdInfo {
    private String title;
    private String url;
    private String timePublished;

    public AdInfo(String title, String url, String timePublished) {
        this.title = title;
        this.url = url;
        this.timePublished = timePublished;
    }

    @Override
    public String toString() {
        return "Title: " + title + "\nURL: " + url + "\nPublished: " + timePublished + "\n";
    }

    // Геттеры и сеттеры
}

package com.example.demo;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class AvitoScraper {

    public static void main(String[] args) {
        try {
            List<AdInfo> ads = scrapeAds("https://www.avito.ru/magnitogorsk/audio_i_video/televizory_i_proektory-ASgBAgICAUSIArgJ?s=104");
            ads.forEach(System.out::println);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static List<AdInfo> scrapeAds(String url) throws IOException {
        Document doc = Jsoup.connect(url).get();
        Elements adElements = doc.select("div[data-marker=item]");
        List<AdInfo> ads = new ArrayList<>();

        for (Element adElement : adElements) {
            String title = adElement.select("h3[itemprop=name]").text();
            String adUrl = "https://www.avito.ru" + adElement.select("a[itemprop=url]").attr("href");
            String timePublished = adElement.select("div[data-marker=item-date]").text();

            ads.add(new AdInfo(title, adUrl, timePublished));
        }

        return ads;
    }
}

package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class DemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}

}

package com.example.demo.util;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Paths;

//C:\BINACEFUTURE\binance-futures-connector-java-main\src\main\java\com\binance\connector\myyyyyFUTURE\MYTEST

public class JavaFileReader {
    public static void main(String[] args) {
        String startFolder = "C:\\MYTRANSLATOR\\AVITO BOT\\demo"; // Укажите путь к начальной папке

        try {
            StringBuilder contentBuilder = new StringBuilder();
            Files.walk(Paths.get(startFolder))
                    .filter(Files::isRegularFile)
                    .filter(path -> path.toString().endsWith(".java"))
                    .forEach(filePath -> {
                        try {
                            String fileContent = new String(Files.readAllBytes(filePath));
                            contentBuilder.append(fileContent).append("\n");
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    });

            String allJavaCode = contentBuilder.toString();

            // Теперь можно записать содержимое в текстовый документ
            try (PrintWriter writer = new PrintWriter("demoAvitoApp.txt")) {
                writer.write(allJavaCode);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }

            System.out.println("Содержимое Java файлов записано в текстовый документ.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
package com.example.demo;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class DemoApplicationTests {

	@Test
	void contextLoads() {
	}

}

